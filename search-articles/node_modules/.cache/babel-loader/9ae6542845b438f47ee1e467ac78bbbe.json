{"ast":null,"code":"var _jsxFileName = \"C:\\\\work-code\\\\mern-again\\\\search-articles\\\\src\\\\components\\\\Language.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Language extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickLang = event => {\n      const langName = this.state.languages.filter(el => {\n        if (event.target.value === el.key) {\n          return el.name;\n        }\n      });\n      this.props.onClickLanguage(langName[0].name); //console.log(\"langName\", langName);\n    };\n\n    this.state = {\n      languages: []\n    };\n    this.onClickLang = this.onClickLang.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      languages: [{\n        key: \"Arabic\",\n        name: \"ar\"\n      }, {\n        key: \"German\",\n        name: \"de\"\n      }, {\n        key: \"Greek\",\n        name: \"el\"\n      }, {\n        key: \"English\",\n        name: \"en\"\n      }, {\n        key: \"Spanish\",\n        name: \"es\"\n      }, {\n        key: \"French\",\n        name: \"fr\"\n      }, {\n        key: \"Hebrew\",\n        name: \"he\"\n      }, {\n        key: \"Hindi\",\n        name: \"hi\"\n      }, {\n        key: \"Italian\",\n        name: \"it\"\n      }, {\n        key: \"Japanese\",\n        name: \"ja\"\n      }, {\n        key: \"Malayalam\",\n        name: \"ml\"\n      }, {\n        key: \"Marathi\",\n        name: \"mr\"\n      }, {\n        key: \"Dutch\",\n        name: \"nl\"\n      }, {\n        key: \"Norwegian\",\n        name: \"no\"\n      }, {\n        key: \"Portuguese\",\n        name: \"pt\"\n      }, {\n        key: \"Romanian\",\n        name: \"ro\"\n      }, {\n        key: \"Russian\",\n        name: \"ru\"\n      }, {\n        key: \"Swedish\",\n        name: \"sv\"\n      }, {\n        key: \"Tamil\",\n        name: \"ta\"\n      }, {\n        key: \"Telugu\",\n        name: \"te\"\n      }, {\n        key: \"Ukrainian\",\n        name: \"uk\"\n      }, {\n        key: \"Chinese\",\n        name: \"zh\"\n      }]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select text-color mx-2 input-back\",\n        onChange: this.onClickLang,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"text-color\",\n          children: \"Select Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), this.state.languages.map(lang => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: lang.key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Language;","map":{"version":3,"sources":["C:/work-code/mern-again/search-articles/src/components/Language.js"],"names":["React","Language","Component","constructor","props","onClickLang","event","langName","state","languages","filter","el","target","value","key","name","onClickLanguage","bind","componentDidMount","setState","render","map","lang"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass Language extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { languages: [] };\r\n\r\n    this.onClickLang = this.onClickLang.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      languages: [\r\n        { key: \"Arabic\", name: \"ar\" },\r\n        { key: \"German\", name: \"de\" },\r\n        { key: \"Greek\", name: \"el\" },\r\n        { key: \"English\", name: \"en\" },\r\n        { key: \"Spanish\", name: \"es\" },\r\n        { key: \"French\", name: \"fr\" },\r\n        { key: \"Hebrew\", name: \"he\" },\r\n        { key: \"Hindi\", name: \"hi\" },\r\n        { key: \"Italian\", name: \"it\" },\r\n        { key: \"Japanese\", name: \"ja\" },\r\n        { key: \"Malayalam\", name: \"ml\" },\r\n        { key: \"Marathi\", name: \"mr\" },\r\n        { key: \"Dutch\", name: \"nl\" },\r\n        { key: \"Norwegian\", name: \"no\" },\r\n        { key: \"Portuguese\", name: \"pt\" },\r\n        { key: \"Romanian\", name: \"ro\" },\r\n        { key: \"Russian\", name: \"ru\" },\r\n        { key: \"Swedish\", name: \"sv\" },\r\n        { key: \"Tamil\", name: \"ta\" },\r\n        { key: \"Telugu\", name: \"te\" },\r\n        { key: \"Ukrainian\", name: \"uk\" },\r\n        { key: \"Chinese\", name: \"zh\" },\r\n      ],\r\n    });\r\n  }\r\n\r\n  onClickLang = (event) => {\r\n    const langName = this.state.languages.filter((el) => {\r\n      if (event.target.value === el.key) {\r\n        return el.name;\r\n      }\r\n    });\r\n\r\n    this.props.onClickLanguage(langName[0].name);\r\n    //console.log(\"langName\", langName);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <select\r\n          className=\"form-select text-color mx-2 input-back\"\r\n          onChange={this.onClickLang}\r\n        >\r\n          <option className=\"text-color\">Select Language</option>\r\n          {this.state.languages.map((lang) => {\r\n            return <option>{lang.key}</option>;\r\n          })}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Language;\r\n"]},"metadata":{},"sourceType":"module"}